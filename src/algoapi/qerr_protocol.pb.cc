// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/qerr_protocol.proto

#include "protos/qerr_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace autotrade {
class ReqtOKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqtOK>
      _instance;
} _ReqtOK_default_instance_;
class ReqtErrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqtErr>
      _instance;
} _ReqtErr_default_instance_;
}  // namespace autotrade
namespace protobuf_protos_2fqerr_5fprotocol_2eproto {
static void InitDefaultsReqtOK() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::autotrade::_ReqtOK_default_instance_;
    new (ptr) ::autotrade::ReqtOK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autotrade::ReqtOK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqtOK =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqtOK}, {}};

static void InitDefaultsReqtErr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::autotrade::_ReqtErr_default_instance_;
    new (ptr) ::autotrade::ReqtErr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::autotrade::ReqtErr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReqtErr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReqtErr}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReqtOK.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReqtErr.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtOK, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtOK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtOK, funcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtOK, ret_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtOK, ret_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtOK, request_id_),
  3,
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtErr, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtErr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtErr, funcid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtErr, ret_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtErr, ret_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::autotrade::ReqtErr, request_id_),
  3,
  2,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::autotrade::ReqtOK)},
  { 13, 22, sizeof(::autotrade::ReqtErr)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::autotrade::_ReqtOK_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::autotrade::_ReqtErr_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protos/qerr_protocol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032protos/qerr_protocol.proto\022\tautotrade\""
      "V\n\006ReqtOK\022\021\n\006funcid\030\001 \001(\005:\0011\022\020\n\010ret_code"
      "\030\002 \002(\005\022\023\n\013ret_message\030\003 \001(\t\022\022\n\nrequest_i"
      "d\030\004 \001(\t\"X\n\007ReqtErr\022\022\n\006funcid\030\001 \001(\005:\002-1\022\020"
      "\n\010ret_code\030\002 \002(\005\022\023\n\013ret_message\030\003 \001(\t\022\022\n"
      "\nrequest_id\030\004 \001(\tB\002H\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 221);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protos/qerr_protocol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protos_2fqerr_5fprotocol_2eproto
namespace autotrade {

// ===================================================================

void ReqtOK::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqtOK::kFuncidFieldNumber;
const int ReqtOK::kRetCodeFieldNumber;
const int ReqtOK::kRetMessageFieldNumber;
const int ReqtOK::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqtOK::ReqtOK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fqerr_5fprotocol_2eproto::scc_info_ReqtOK.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:autotrade.ReqtOK)
}
ReqtOK::ReqtOK(const ReqtOK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ret_message()) {
    ret_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ret_message_);
  }
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_request_id()) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  ::memcpy(&ret_code_, &from.ret_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&funcid_) -
    reinterpret_cast<char*>(&ret_code_)) + sizeof(funcid_));
  // @@protoc_insertion_point(copy_constructor:autotrade.ReqtOK)
}

void ReqtOK::SharedCtor() {
  ret_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_code_ = 0;
  funcid_ = 1;
}

ReqtOK::~ReqtOK() {
  // @@protoc_insertion_point(destructor:autotrade.ReqtOK)
  SharedDtor();
}

void ReqtOK::SharedDtor() {
  ret_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqtOK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqtOK::descriptor() {
  ::protobuf_protos_2fqerr_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fqerr_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqtOK& ReqtOK::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fqerr_5fprotocol_2eproto::scc_info_ReqtOK.base);
  return *internal_default_instance();
}


void ReqtOK::Clear() {
// @@protoc_insertion_point(message_clear_start:autotrade.ReqtOK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ret_message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      request_id_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ret_code_ = 0;
    funcid_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReqtOK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autotrade.ReqtOK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 funcid = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_funcid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &funcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ret_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ret_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ret_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ret_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ret_message().data(), static_cast<int>(this->ret_message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "autotrade.ReqtOK.ret_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string request_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "autotrade.ReqtOK.request_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autotrade.ReqtOK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autotrade.ReqtOK)
  return false;
#undef DO_
}

void ReqtOK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autotrade.ReqtOK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 funcid = 1 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->funcid(), output);
  }

  // required int32 ret_code = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret_code(), output);
  }

  // optional string ret_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ret_message().data(), static_cast<int>(this->ret_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "autotrade.ReqtOK.ret_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ret_message(), output);
  }

  // optional string request_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "autotrade.ReqtOK.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->request_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:autotrade.ReqtOK)
}

::google::protobuf::uint8* ReqtOK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autotrade.ReqtOK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 funcid = 1 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->funcid(), target);
  }

  // required int32 ret_code = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret_code(), target);
  }

  // optional string ret_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ret_message().data(), static_cast<int>(this->ret_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "autotrade.ReqtOK.ret_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ret_message(), target);
  }

  // optional string request_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "autotrade.ReqtOK.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->request_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autotrade.ReqtOK)
  return target;
}

size_t ReqtOK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autotrade.ReqtOK)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 ret_code = 2;
  if (has_ret_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret_code());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string ret_message = 3;
    if (has_ret_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ret_message());
    }

    // optional string request_id = 4;
    if (has_request_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->request_id());
    }

  }
  // optional int32 funcid = 1 [default = 1];
  if (has_funcid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->funcid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqtOK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autotrade.ReqtOK)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqtOK* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqtOK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autotrade.ReqtOK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autotrade.ReqtOK)
    MergeFrom(*source);
  }
}

void ReqtOK::MergeFrom(const ReqtOK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autotrade.ReqtOK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ret_message();
      ret_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ret_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_request_id();
      request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      ret_code_ = from.ret_code_;
    }
    if (cached_has_bits & 0x00000008u) {
      funcid_ = from.funcid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReqtOK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autotrade.ReqtOK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqtOK::CopyFrom(const ReqtOK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autotrade.ReqtOK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqtOK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void ReqtOK::Swap(ReqtOK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqtOK::InternalSwap(ReqtOK* other) {
  using std::swap;
  ret_message_.Swap(&other->ret_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ret_code_, other->ret_code_);
  swap(funcid_, other->funcid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqtOK::GetMetadata() const {
  protobuf_protos_2fqerr_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fqerr_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqtErr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqtErr::kFuncidFieldNumber;
const int ReqtErr::kRetCodeFieldNumber;
const int ReqtErr::kRetMessageFieldNumber;
const int ReqtErr::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqtErr::ReqtErr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protos_2fqerr_5fprotocol_2eproto::scc_info_ReqtErr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:autotrade.ReqtErr)
}
ReqtErr::ReqtErr(const ReqtErr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ret_message()) {
    ret_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ret_message_);
  }
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_request_id()) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  ::memcpy(&ret_code_, &from.ret_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&funcid_) -
    reinterpret_cast<char*>(&ret_code_)) + sizeof(funcid_));
  // @@protoc_insertion_point(copy_constructor:autotrade.ReqtErr)
}

void ReqtErr::SharedCtor() {
  ret_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_code_ = 0;
  funcid_ = -1;
}

ReqtErr::~ReqtErr() {
  // @@protoc_insertion_point(destructor:autotrade.ReqtErr)
  SharedDtor();
}

void ReqtErr::SharedDtor() {
  ret_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReqtErr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReqtErr::descriptor() {
  ::protobuf_protos_2fqerr_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fqerr_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqtErr& ReqtErr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protos_2fqerr_5fprotocol_2eproto::scc_info_ReqtErr.base);
  return *internal_default_instance();
}


void ReqtErr::Clear() {
// @@protoc_insertion_point(message_clear_start:autotrade.ReqtErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      ret_message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      request_id_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ret_code_ = 0;
    funcid_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReqtErr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:autotrade.ReqtErr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 funcid = 1 [default = -1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_funcid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &funcid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ret_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ret_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ret_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ret_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ret_message().data(), static_cast<int>(this->ret_message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "autotrade.ReqtErr.ret_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string request_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "autotrade.ReqtErr.request_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:autotrade.ReqtErr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:autotrade.ReqtErr)
  return false;
#undef DO_
}

void ReqtErr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:autotrade.ReqtErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 funcid = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->funcid(), output);
  }

  // required int32 ret_code = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret_code(), output);
  }

  // optional string ret_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ret_message().data(), static_cast<int>(this->ret_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "autotrade.ReqtErr.ret_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ret_message(), output);
  }

  // optional string request_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "autotrade.ReqtErr.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->request_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:autotrade.ReqtErr)
}

::google::protobuf::uint8* ReqtErr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:autotrade.ReqtErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 funcid = 1 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->funcid(), target);
  }

  // required int32 ret_code = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret_code(), target);
  }

  // optional string ret_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ret_message().data(), static_cast<int>(this->ret_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "autotrade.ReqtErr.ret_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ret_message(), target);
  }

  // optional string request_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "autotrade.ReqtErr.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->request_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:autotrade.ReqtErr)
  return target;
}

size_t ReqtErr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:autotrade.ReqtErr)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 ret_code = 2;
  if (has_ret_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret_code());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string ret_message = 3;
    if (has_ret_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ret_message());
    }

    // optional string request_id = 4;
    if (has_request_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->request_id());
    }

  }
  // optional int32 funcid = 1 [default = -1];
  if (has_funcid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->funcid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqtErr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:autotrade.ReqtErr)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqtErr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqtErr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:autotrade.ReqtErr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:autotrade.ReqtErr)
    MergeFrom(*source);
  }
}

void ReqtErr::MergeFrom(const ReqtErr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:autotrade.ReqtErr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ret_message();
      ret_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ret_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_request_id();
      request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      ret_code_ = from.ret_code_;
    }
    if (cached_has_bits & 0x00000008u) {
      funcid_ = from.funcid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReqtErr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:autotrade.ReqtErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqtErr::CopyFrom(const ReqtErr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:autotrade.ReqtErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqtErr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void ReqtErr::Swap(ReqtErr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqtErr::InternalSwap(ReqtErr* other) {
  using std::swap;
  ret_message_.Swap(&other->ret_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ret_code_, other->ret_code_);
  swap(funcid_, other->funcid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReqtErr::GetMetadata() const {
  protobuf_protos_2fqerr_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protos_2fqerr_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace autotrade
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::autotrade::ReqtOK* Arena::CreateMaybeMessage< ::autotrade::ReqtOK >(Arena* arena) {
  return Arena::CreateInternal< ::autotrade::ReqtOK >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::autotrade::ReqtErr* Arena::CreateMaybeMessage< ::autotrade::ReqtErr >(Arena* arena) {
  return Arena::CreateInternal< ::autotrade::ReqtErr >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
