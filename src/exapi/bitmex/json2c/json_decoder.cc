/* $Id: 2018-09-16 19:15:51 $
 * 
 * This file is auto-generated by parser, DO NOT MODIFY! 
 * Copyright (c) 2014-2018 Zerone.IO. All rights reserved.
 * 
 */

#include "json_decoder.h"
#include "json2c.inc"

template<>
int from_json(JsonUtils::Json &json, QueryFilterParams &v)
{
    json.at("symbol").get(v.symbol);
    json.at("filter").get(v.filter);
    json.at("columns").get(v.columns);
    json.at("count").get(v.count);
    json.at("start").get(v.start);
    json.at("reverse").get(v.reverse);
    json.at("startTime").get_datetime(v.startTime);
    json.at("endTime").get_datetime(v.endTime);
    return 0;
}

template<>
int from_json(JsonUtils::Json &json, OrderParams &v)
{
    json.at("symbol").get(v.symbol);
    json.at("side").get(v.side);
    json.at("simpleOrderQty").get(v.simpleOrderQty);
    json.at("orderQty").get(v.orderQty);
    json.at("price").get(v.price);
    json.at("displayQty").get(v.displayQty);
    json.at("stopPx").get(v.stopPx);
    json.at("clOrdID").get(v.clOrdID);
    json.at("clOrdLinkID").get(v.clOrdLinkID);
    json.at("pegOffsetValue").get(v.pegOffsetValue);
    json.at("pegPriceType").get(v.pegPriceType);
    json.at("ordType").get(v.ordType);
    json.at("timeInForce").get(v.timeInForce);
    json.at("execInst").get(v.execInst);
    json.at("contingencyType").get(v.contingencyType);
    json.at("text").get(v.text);
    return 0;
}

template<>
int from_json(JsonUtils::Json &json, OrderAmendParams &v)
{
    json.at("orderId").get(v.orderId);
    json.at("origClOrdID").get(v.origClOrdID);
    json.at("clOrdID").get(v.clOrdID);
    json.at("simpleOrderQty").get(v.simpleOrderQty);
    json.at("orderQty").get(v.orderQty);
    json.at("simpleLeavesQty").get(v.simpleLeavesQty);
    json.at("leavesQty").get(v.leavesQty);
    json.at("price").get(v.price);
    json.at("stopPx").get(v.stopPx);
    json.at("pegOffsetValue").get(v.pegOffsetValue);
    json.at("text").get(v.text);
    return 0;
}

template<>
int from_json(JsonUtils::Json &json, QueryPositionParams &v)
{
    json.at("filter").get(v.filter);
    json.at("columns").get(v.columns);
    json.at("count").get(v.count);
    return 0;
}

